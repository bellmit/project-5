drs {
  sendNotify = false

  #geckoDriver = "C:\\geckodriver\\geckodriver.exe"
  #geckoDriver = "/home/servicedesk/driver/geckodriver"
  geckoDriver = "/home/arthur/driver/geckodriver"
  notifyNewReview = true
  amazonReviewBccList = ["cleo.chen@tw.drs.network", "shirley.wu@tw.drs.network", "wei.wu@tw.drs.network",
  "annie.hsieh@drs.network", "ariel.hsieh@drs.network", "arthur.wu@drs.network","vincent.wang@tw.drs.network"]
  #amazonReviewBccList = ["arthur.wu@drs.network","jiujye@gmail.com"]
  sellbackSpreadSheetId = "1SppsAXiRYM8NGooFNRfi7uR75JO-q1Cwwu4iGsoFD1M"
  sellbackSheetRange = "LatestSellbackData!A2:D"
}
akka {

  #loglevel = "DEBUG"
  loglevel = "INFO"
  stdout-loglevel = "INFO"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"


  actor.debug.autoreceive = on
  actor.debug.lifecycle = on

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    serializers {
      java = "akka.serialization.JavaSerializer"
    }

    serialization-bindings {
      "java.lang.String" = java
    }

    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 2
      parallelism-max = 10
      parallelism-factor = 2.0
    }
    mailbox-capacity = 100000
    throughput = 100

  }
  remote {
    maximum-payload-bytes = 30000000 bytes
    log-remote-lifecycle-events = on
    netty.tcp {
      hostname = "localhost"
      #hostname = "10.0.0.246"
      port = 5001
      message-frame-size =  30000000b
      send-buffer-size =  30000000b
      receive-buffer-size =  30000000b
      maximum-frame-size = 30000000b
    }
  }

  cluster {
    seed-nodes = [
      # "akka.tcp://drsMarketing@10.0.0.246:2551"]
      "akka.tcp://drsRT@localhost:5001"]
    #"akka.tcp://ClusterSystem@192.168.0.127:2551",
    #"akka.tcp://ClusterSystem@192.168.0.126:2551"]

    #auto-down-unreachable-after = 10s
  }

  quartz {
    defaultTimezone = "Asia/Taipei"
    schedules {
      cronRTAM {
        expression = "0 0 8 * * ? *"
      }
      cronRTPM {
        expression = "0 30 15 * * ? *"
      }


    }
  }
}



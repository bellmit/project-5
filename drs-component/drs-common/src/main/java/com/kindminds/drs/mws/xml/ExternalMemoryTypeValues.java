//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.06.10 at 11:40:51 PM CST 
//


package com.kindminds.drs.mws.xml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ExternalMemoryTypeValues.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ExternalMemoryTypeValues"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="cd-r"/&gt;
 *     &lt;enumeration value="cd_rw"/&gt;
 *     &lt;enumeration value="compact_flash_type_i_or_ii"/&gt;
 *     &lt;enumeration value="compactflash_type_i"/&gt;
 *     &lt;enumeration value="compactflash_type_ii"/&gt;
 *     &lt;enumeration value="dvd_r"/&gt;
 *     &lt;enumeration value="dvd_rw"/&gt;
 *     &lt;enumeration value="memory_stick"/&gt;
 *     &lt;enumeration value="memory-stick"/&gt;
 *     &lt;enumeration value="micro_sdhc"/&gt;
 *     &lt;enumeration value="micro_sdxc"/&gt;
 *     &lt;enumeration value="microsd"/&gt;
 *     &lt;enumeration value="mini_dvd"/&gt;
 *     &lt;enumeration value="multimedia_card"/&gt;
 *     &lt;enumeration value="mmc"/&gt;
 *     &lt;enumeration value="mmc_micro"/&gt;
 *     &lt;enumeration value="sdhc"/&gt;
 *     &lt;enumeration value="sdxc"/&gt;
 *     &lt;enumeration value="secure_digital"/&gt;
 *     &lt;enumeration value="secure-digital"/&gt;
 *     &lt;enumeration value="smartmedia_card"/&gt;
 *     &lt;enumeration value="solid_state_drive"/&gt;
 *     &lt;enumeration value="xd_picture_card"/&gt;
 *     &lt;enumeration value="other"/&gt;
 *     &lt;enumeration value="unknown"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "ExternalMemoryTypeValues")
@XmlEnum
public enum ExternalMemoryTypeValues {

    @XmlEnumValue("cd-r")
    VALUE_1("cd-r"),
    @XmlEnumValue("cd_rw")
    VALUE_2("cd_rw"),
    @XmlEnumValue("compact_flash_type_i_or_ii")
    VALUE_3("compact_flash_type_i_or_ii"),
    @XmlEnumValue("compactflash_type_i")
    VALUE_4("compactflash_type_i"),
    @XmlEnumValue("compactflash_type_ii")
    VALUE_5("compactflash_type_ii"),
    @XmlEnumValue("dvd_r")
    VALUE_6("dvd_r"),
    @XmlEnumValue("dvd_rw")
    VALUE_7("dvd_rw"),
    @XmlEnumValue("memory_stick")
    VALUE_8("memory_stick"),
    @XmlEnumValue("memory-stick")
    VALUE_9("memory-stick"),
    @XmlEnumValue("micro_sdhc")
    VALUE_10("micro_sdhc"),
    @XmlEnumValue("micro_sdxc")
    VALUE_11("micro_sdxc"),
    @XmlEnumValue("microsd")
    VALUE_12("microsd"),
    @XmlEnumValue("mini_dvd")
    VALUE_13("mini_dvd"),
    @XmlEnumValue("multimedia_card")
    VALUE_14("multimedia_card"),
    @XmlEnumValue("mmc")
    VALUE_15("mmc"),
    @XmlEnumValue("mmc_micro")
    VALUE_16("mmc_micro"),
    @XmlEnumValue("sdhc")
    VALUE_17("sdhc"),
    @XmlEnumValue("sdxc")
    VALUE_18("sdxc"),
    @XmlEnumValue("secure_digital")
    VALUE_19("secure_digital"),
    @XmlEnumValue("secure-digital")
    VALUE_20("secure-digital"),
    @XmlEnumValue("smartmedia_card")
    VALUE_21("smartmedia_card"),
    @XmlEnumValue("solid_state_drive")
    VALUE_22("solid_state_drive"),
    @XmlEnumValue("xd_picture_card")
    VALUE_23("xd_picture_card"),
    @XmlEnumValue("other")
    VALUE_24("other"),
    @XmlEnumValue("unknown")
    VALUE_25("unknown");
    private final String value;

    ExternalMemoryTypeValues(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ExternalMemoryTypeValues fromValue(String v) {
        for (ExternalMemoryTypeValues c: ExternalMemoryTypeValues.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.06.10 at 11:40:51 PM CST 
//


package com.kindminds.drs.mws.xml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SpeedUnitOfMeasure.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="SpeedUnitOfMeasure"&gt;
 *   &lt;restriction base="{}String"&gt;
 *     &lt;enumeration value="feet_per_minute"/&gt;
 *     &lt;enumeration value="miles_per_hour"/&gt;
 *     &lt;enumeration value="kilometers_per_hour"/&gt;
 *     &lt;enumeration value="RPM"/&gt;
 *     &lt;enumeration value="RPS"/&gt;
 *     &lt;enumeration value="meters per second"/&gt;
 *     &lt;enumeration value="centimeters per second"/&gt;
 *     &lt;enumeration value="millimeters per second"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "SpeedUnitOfMeasure")
@XmlEnum
public enum SpeedUnitOfMeasure {

    @XmlEnumValue("feet_per_minute")
    FEET___PER___MINUTE("feet_per_minute"),
    @XmlEnumValue("miles_per_hour")
    MILES___PER___HOUR("miles_per_hour"),
    @XmlEnumValue("kilometers_per_hour")
    KILOMETERS___PER___HOUR("kilometers_per_hour"),
    RPM("RPM"),
    RPS("RPS"),
    @XmlEnumValue("meters per second")
    METERS___PER___SECOND("meters per second"),
    @XmlEnumValue("centimeters per second")
    CENTIMETERS___PER___SECOND("centimeters per second"),
    @XmlEnumValue("millimeters per second")
    MILLIMETERS___PER___SECOND("millimeters per second");
    private final String value;

    SpeedUnitOfMeasure(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SpeedUnitOfMeasure fromValue(String v) {
        for (SpeedUnitOfMeasure c: SpeedUnitOfMeasure.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}

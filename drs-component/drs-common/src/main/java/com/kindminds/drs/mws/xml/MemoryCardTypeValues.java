//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.06.10 at 11:40:51 PM CST 
//


package com.kindminds.drs.mws.xml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for MemoryCardTypeValues.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="MemoryCardTypeValues"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="compactflash_type_i"/&gt;
 *     &lt;enumeration value="compactflash_type_ii"/&gt;
 *     &lt;enumeration value="hs_mmc"/&gt;
 *     &lt;enumeration value="memory_stick"/&gt;
 *     &lt;enumeration value="memory_stick_duo"/&gt;
 *     &lt;enumeration value="memory_stick_micro"/&gt;
 *     &lt;enumeration value="memory_stick_pro"/&gt;
 *     &lt;enumeration value="memory_stick_pro_duo"/&gt;
 *     &lt;enumeration value="memory_stick_pro_hg_duo"/&gt;
 *     &lt;enumeration value="memory_stick_select"/&gt;
 *     &lt;enumeration value="memory_stick_xc"/&gt;
 *     &lt;enumeration value="memory_stick_xc_hg_micro"/&gt;
 *     &lt;enumeration value="memory_stick_xc_micro"/&gt;
 *     &lt;enumeration value="MiCard"/&gt;
 *     &lt;enumeration value="microsd"/&gt;
 *     &lt;enumeration value="micro_sdhc"/&gt;
 *     &lt;enumeration value="micro_sdxc"/&gt;
 *     &lt;enumeration value="minisd"/&gt;
 *     &lt;enumeration value="mini_sdhc"/&gt;
 *     &lt;enumeration value="mini_sdxc"/&gt;
 *     &lt;enumeration value="mmc_micro"/&gt;
 *     &lt;enumeration value="multimedia_card"/&gt;
 *     &lt;enumeration value="multimedia_card_mobile"/&gt;
 *     &lt;enumeration value="multimedia_card_plus"/&gt;
 *     &lt;enumeration value="rs_mmc"/&gt;
 *     &lt;enumeration value="sdhc"/&gt;
 *     &lt;enumeration value="sdio"/&gt;
 *     &lt;enumeration value="sdxc"/&gt;
 *     &lt;enumeration value="secure_digital"/&gt;
 *     &lt;enumeration value="secure_mmc"/&gt;
 *     &lt;enumeration value="smartmedia_card"/&gt;
 *     &lt;enumeration value="transflash"/&gt;
 *     &lt;enumeration value="xd_picture_card"/&gt;
 *     &lt;enumeration value="xd_picture_card_h"/&gt;
 *     &lt;enumeration value="xd_picture_card_m"/&gt;
 *     &lt;enumeration value="xd_picture_card_m_plus"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "MemoryCardTypeValues")
@XmlEnum
public enum MemoryCardTypeValues {

    @XmlEnumValue("compactflash_type_i")
    COMPACTFLASH___TYPE___I("compactflash_type_i"),
    @XmlEnumValue("compactflash_type_ii")
    COMPACTFLASH___TYPE___II("compactflash_type_ii"),
    @XmlEnumValue("hs_mmc")
    HS___MMC("hs_mmc"),
    @XmlEnumValue("memory_stick")
    MEMORY___STICK("memory_stick"),
    @XmlEnumValue("memory_stick_duo")
    MEMORY___STICK___DUO("memory_stick_duo"),
    @XmlEnumValue("memory_stick_micro")
    MEMORY___STICK___MICRO("memory_stick_micro"),
    @XmlEnumValue("memory_stick_pro")
    MEMORY___STICK___PRO("memory_stick_pro"),
    @XmlEnumValue("memory_stick_pro_duo")
    MEMORY___STICK___PRO___DUO("memory_stick_pro_duo"),
    @XmlEnumValue("memory_stick_pro_hg_duo")
    MEMORY___STICK___PRO___HG___DUO("memory_stick_pro_hg_duo"),
    @XmlEnumValue("memory_stick_select")
    MEMORY___STICK___SELECT("memory_stick_select"),
    @XmlEnumValue("memory_stick_xc")
    MEMORY___STICK___XC("memory_stick_xc"),
    @XmlEnumValue("memory_stick_xc_hg_micro")
    MEMORY___STICK___XC___HG___MICRO("memory_stick_xc_hg_micro"),
    @XmlEnumValue("memory_stick_xc_micro")
    MEMORY___STICK___XC___MICRO("memory_stick_xc_micro"),
    @XmlEnumValue("MiCard")
    MI_CARD("MiCard"),
    @XmlEnumValue("microsd")
    MICROSD("microsd"),
    @XmlEnumValue("micro_sdhc")
    MICRO___SDHC("micro_sdhc"),
    @XmlEnumValue("micro_sdxc")
    MICRO___SDXC("micro_sdxc"),
    @XmlEnumValue("minisd")
    MINISD("minisd"),
    @XmlEnumValue("mini_sdhc")
    MINI___SDHC("mini_sdhc"),
    @XmlEnumValue("mini_sdxc")
    MINI___SDXC("mini_sdxc"),
    @XmlEnumValue("mmc_micro")
    MMC___MICRO("mmc_micro"),
    @XmlEnumValue("multimedia_card")
    MULTIMEDIA___CARD("multimedia_card"),
    @XmlEnumValue("multimedia_card_mobile")
    MULTIMEDIA___CARD___MOBILE("multimedia_card_mobile"),
    @XmlEnumValue("multimedia_card_plus")
    MULTIMEDIA___CARD___PLUS("multimedia_card_plus"),
    @XmlEnumValue("rs_mmc")
    RS___MMC("rs_mmc"),
    @XmlEnumValue("sdhc")
    SDHC("sdhc"),
    @XmlEnumValue("sdio")
    SDIO("sdio"),
    @XmlEnumValue("sdxc")
    SDXC("sdxc"),
    @XmlEnumValue("secure_digital")
    SECURE___DIGITAL("secure_digital"),
    @XmlEnumValue("secure_mmc")
    SECURE___MMC("secure_mmc"),
    @XmlEnumValue("smartmedia_card")
    SMARTMEDIA___CARD("smartmedia_card"),
    @XmlEnumValue("transflash")
    TRANSFLASH("transflash"),
    @XmlEnumValue("xd_picture_card")
    XD___PICTURE___CARD("xd_picture_card"),
    @XmlEnumValue("xd_picture_card_h")
    XD___PICTURE___CARD___H("xd_picture_card_h"),
    @XmlEnumValue("xd_picture_card_m")
    XD___PICTURE___CARD___M("xd_picture_card_m"),
    @XmlEnumValue("xd_picture_card_m_plus")
    XD___PICTURE___CARD___M___PLUS("xd_picture_card_m_plus");
    private final String value;

    MemoryCardTypeValues(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static MemoryCardTypeValues fromValue(String v) {
        for (MemoryCardTypeValues c: MemoryCardTypeValues.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}

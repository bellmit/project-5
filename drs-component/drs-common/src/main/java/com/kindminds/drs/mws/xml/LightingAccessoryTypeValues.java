//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.06.10 at 11:40:51 PM CST 
//


package com.kindminds.drs.mws.xml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for LightingAccessoryTypeValues.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="LightingAccessoryTypeValues"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="c-mounts"/&gt;
 *     &lt;enumeration value="lens-scope-converters"/&gt;
 *     &lt;enumeration value="lens-to-camera-adapters"/&gt;
 *     &lt;enumeration value="remote-lens-controllers"/&gt;
 *     &lt;enumeration value="extenders"/&gt;
 *     &lt;enumeration value="series-vii-adapters"/&gt;
 *     &lt;enumeration value="t-mounts"/&gt;
 *     &lt;enumeration value="tripod-adapters"/&gt;
 *     &lt;enumeration value="lens-boards"/&gt;
 *     &lt;enumeration value="bayonets"/&gt;
 *     &lt;enumeration value="lens-hoods"/&gt;
 *     &lt;enumeration value="lens-supports"/&gt;
 *     &lt;enumeration value="rapid-focusing-levers"/&gt;
 *     &lt;enumeration value="shutters"/&gt;
 *     &lt;enumeration value="diopters"/&gt;
 *     &lt;enumeration value="mirror-scopes"/&gt;
 *     &lt;enumeration value="lens-caps-generals"/&gt;
 *     &lt;enumeration value="lens-caps-up-to-48mm"/&gt;
 *     &lt;enumeration value="lens-caps-49mm"/&gt;
 *     &lt;enumeration value="lens-caps-52mm"/&gt;
 *     &lt;enumeration value="lens-caps-55mm"/&gt;
 *     &lt;enumeration value="lens-caps-58mm"/&gt;
 *     &lt;enumeration value="lens-caps-62mm"/&gt;
 *     &lt;enumeration value="lens-caps-67mm"/&gt;
 *     &lt;enumeration value="lens-caps-72mm"/&gt;
 *     &lt;enumeration value="lens-caps-77mm"/&gt;
 *     &lt;enumeration value="lens-caps-82mm"/&gt;
 *     &lt;enumeration value="lens-caps-86mm"/&gt;
 *     &lt;enumeration value="lens-caps-95mm"/&gt;
 *     &lt;enumeration value="lens-caps-other-sizes"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "LightingAccessoryTypeValues")
@XmlEnum
public enum LightingAccessoryTypeValues {

    @XmlEnumValue("c-mounts")
    C___MOUNTS("c-mounts"),
    @XmlEnumValue("lens-scope-converters")
    LENS___SCOPE___CONVERTERS("lens-scope-converters"),
    @XmlEnumValue("lens-to-camera-adapters")
    LENS___TO___CAMERA___ADAPTERS("lens-to-camera-adapters"),
    @XmlEnumValue("remote-lens-controllers")
    REMOTE___LENS___CONTROLLERS("remote-lens-controllers"),
    @XmlEnumValue("extenders")
    EXTENDERS("extenders"),
    @XmlEnumValue("series-vii-adapters")
    SERIES___VII___ADAPTERS("series-vii-adapters"),
    @XmlEnumValue("t-mounts")
    T___MOUNTS("t-mounts"),
    @XmlEnumValue("tripod-adapters")
    TRIPOD___ADAPTERS("tripod-adapters"),
    @XmlEnumValue("lens-boards")
    LENS___BOARDS("lens-boards"),
    @XmlEnumValue("bayonets")
    BAYONETS("bayonets"),
    @XmlEnumValue("lens-hoods")
    LENS___HOODS("lens-hoods"),
    @XmlEnumValue("lens-supports")
    LENS___SUPPORTS("lens-supports"),
    @XmlEnumValue("rapid-focusing-levers")
    RAPID___FOCUSING___LEVERS("rapid-focusing-levers"),
    @XmlEnumValue("shutters")
    SHUTTERS("shutters"),
    @XmlEnumValue("diopters")
    DIOPTERS("diopters"),
    @XmlEnumValue("mirror-scopes")
    MIRROR___SCOPES("mirror-scopes"),
    @XmlEnumValue("lens-caps-generals")
    LENS___CAPS___GENERALS("lens-caps-generals"),
    @XmlEnumValue("lens-caps-up-to-48mm")
    LENS___CAPS___UP___TO___48_MM("lens-caps-up-to-48mm"),
    @XmlEnumValue("lens-caps-49mm")
    LENS___CAPS___49_MM("lens-caps-49mm"),
    @XmlEnumValue("lens-caps-52mm")
    LENS___CAPS___52_MM("lens-caps-52mm"),
    @XmlEnumValue("lens-caps-55mm")
    LENS___CAPS___55_MM("lens-caps-55mm"),
    @XmlEnumValue("lens-caps-58mm")
    LENS___CAPS___58_MM("lens-caps-58mm"),
    @XmlEnumValue("lens-caps-62mm")
    LENS___CAPS___62_MM("lens-caps-62mm"),
    @XmlEnumValue("lens-caps-67mm")
    LENS___CAPS___67_MM("lens-caps-67mm"),
    @XmlEnumValue("lens-caps-72mm")
    LENS___CAPS___72_MM("lens-caps-72mm"),
    @XmlEnumValue("lens-caps-77mm")
    LENS___CAPS___77_MM("lens-caps-77mm"),
    @XmlEnumValue("lens-caps-82mm")
    LENS___CAPS___82_MM("lens-caps-82mm"),
    @XmlEnumValue("lens-caps-86mm")
    LENS___CAPS___86_MM("lens-caps-86mm"),
    @XmlEnumValue("lens-caps-95mm")
    LENS___CAPS___95_MM("lens-caps-95mm"),
    @XmlEnumValue("lens-caps-other-sizes")
    LENS___CAPS___OTHER___SIZES("lens-caps-other-sizes");
    private final String value;

    LightingAccessoryTypeValues(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LightingAccessoryTypeValues fromValue(String v) {
        for (LightingAccessoryTypeValues c: LightingAccessoryTypeValues.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}

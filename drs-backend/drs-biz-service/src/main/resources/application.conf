drs {
  sendNotify = true
  sellbackSpreadSheetId = "1SppsAXiRYM8NGooFNRfi7uR75JO-q1Cwwu4iGsoFD1M"
  sellbackSheetRange = "LatestSellbackData!A2:D"
}
akka {

  #loglevel = "DEBUG"
  loglevel = "INFO"
  stdout-loglevel = "INFO"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"


  actor.debug.autoreceive = on
  actor.debug.lifecycle = on

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    allow-java-serialization = on


    serializers {
           java = "akka.serialization.JavaSerializer"
     }

     serialization-bindings {
          "java.lang.String" = java
     }

  }


  remote {
    #maximum-payload-bytes = 30000000 bytes
    log-remote-lifecycle-events = off

    artery {
      canonical {
        hostname = "localhost"
        port = 5001
      }
      advanced {
        maximum-frame-size = 4MiB
        buffer-pool-size = 128
        maximum-large-frame-size = 4MiB
        large-buffer-pool-size = 32
      }
    }
  }

  cluster {
    seed-nodes = [
     # "akka.tcp://drsMarketing@10.0.0.246:2551"]
    "akka://drs@localhost:5001"]
      #"akka.tcp://drsGoogle@localhost:5005"]
    #"akka.tcp://ClusterSystem@192.168.0.127:2551",
    #"akka.tcp://ClusterSystem@192.168.0.126:2551"]

    #auto-down-unreachable-after = 10s
      downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  quartz {
    defaultTimezone = "Asia/Taipei"
    schedules {
      cronProfitShareEmailReminder {
        description = "A cron job that fires off 20th every month 9am"
        expression = "0 0 9 20 * ? *"
      }

      cronLongTermStorageFeeEmailReminder {
        description = "fires off 2 months and 1 month before long term storage fee charge dates"
        expression = "0 0 0 15 1,6,7,12 ? *"
      }
      keyProductStatus {
        expression = "0 17,47 * * * ? *"
      }
      cronConfirmMarketingMaterialReminder {
        description = "Reminds Suppliers every 24 hours if they need to confirm marketing material"
        expression = "0 0 0 1/1 * ? *"
      }
      cronImportSellBackTransaction {
        description = "Runs every Thursday 12:00, only imports Sellback on do settlement week"
        expression = "0 0 12 ? * THU *"
      }

      cronGenerateAccountsReceivableAging {
        description = "Runs every Wednesday at 2:00"
        expression = "0 0 14 ? * WED *"
      }

      cronBuyBoxEmailReminder {
        description = "A cron job that fires off every day at 17pm"
        expression = "0 0 17 * * ? *"
      }
    }
  }
}






drs {
  hadoop {
    conf = "/home/servicedesk"
    #conf="C:\\Users\\Ralph Lin"
    #conf = "/home/arthur"
  }
}



# Load using SlickSession.forConfig("slick-postgres")
slick-postgres {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    dataSourceClass = "slick.jdbc.DriverDataSource"
    properties = {
      driver = "org.postgresql.Driver"
      #url = "jdbc:postgresql://drs.crghoygbfshk.ap-northeast-1.rds.amazonaws.com:5432/drs?assumeMinServerVersion=9.0"
      url = "jdbc:postgresql://localhost:5432/drs"
      user = drs
      password = "phi42PrlGo6p"
    }
    queueSize = 10000
    maxConnections = 10
    numThreads = 2
  }
}


akka {
   extensions = ["akka.cluster.pubsub.DistributedPubSub"]
    loglevel = "INFO"
    stdout-loglevel = "INFO"
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

    actor.debug.autoreceive = on
    actor.debug.lifecycle = on


  quartz {
    defaultTimezone = "Asia/Taipei"
    schedules {
      cronManageFBAInventoryUS {
         expression = "0 01 16 * * ?"
      }
      cronManageFBAInventoryUK {
         expression = "0 02 16 * * ?"
      }
      cronManageFBAInventoryCA {
         expression = "0 03 16 * * ?"
      }
      cronManageFBAInventoryDE {
         expression = "0 02 16 * * ?"
      }
      cronMonthlyStorageRptNa {
         expression = "0 02 12 18 * ? *"
      }
      cronLongTermStorageRpt {
         expression = "0 0 14 18 FEB,AUG ? *"
      }
      cronDownloadAllInventoryFBAReports {
        expression = "0 11 0 ? * SAT *"
      }
      cronFBADailyInventoryHistoryUS {
         expression = "0 31 16 * * ?"
      }
      cronFBADailyInventoryHistoryCA {
         expression = "0 32 16 * * ?"
      }
      cronFBADailyInventoryHistoryUK {
         expression = "0 33 16 * * ?"
      }
      cronFBADailyInventoryHistoryDE {
          expression = "0 34 16 * * ?"
      }
      cronCustomerShipmentSalesUS {
         expression = "0 01 20 * * ?"
      }
      cronCustomerShipmentSalesCA {
         expression = "0 02 20 * * ?"
      }
      cronCustomerShipmentSalesUK {
         expression = "0 03 20 * * ?"
      }
      cronCustomerShipmentSalesDE {
         expression = "0 04 20 * * ?"
      }
      cronInventoryEventDetailUS {
         expression = "0 01 17 * * ?"
      }
      cronInventoryEventDetailCA {
         expression = "0 02 17 * * ?"
      }
      cronInventoryEventDetailUK {
         expression = "0 03 17 * * ?"
      }
      cronInventoryEventDetailDE {
         expression = "0 04 17 * * ?"
      }
      cronReceivedInventoryUS {
         expression = "0 31 17 * * ?"
      }
      cronReceivedInventoryCA {
         expression = "0 32 17 * * ?"
      }
      cronReceivedInventoryUK {
         expression = "0 33 17 * * ?"
      }
      cronReceivedInventoryDE {
         expression = "0 34 17 * * ?"
      }
      cronReservedInventoryUS {
         expression = "0 01 18 * * ?"
      }
      cronReservedInventoryCA {
         expression = "0 02 18 * * ?"
      }
      cronReservedInventoryUK {
         expression = "0 03 18 * * ?"
      }
      cronReservedInventoryDE {
         expression = "0 04 18 * * ?"
      }
      cronReplacementsUS {
         expression = "0 31 18 * * ?"
      }
      cronReplacementsCA {
         expression = "0 32 18 * * ?"
      }
      cronReplacementsUK {
         expression = "0 33 18 * * ?"
      }
      cronReplacementsDE {
         expression = "0 34 18 * * ?"
      }
    }
  }

    actor {

      provider = "akka.cluster.ClusterActorRefProvider"

      allow-java-serialization = on

      serializers {
        java = "akka.serialization.JavaSerializer"
      }

      serialization-bindings {
        "java.lang.String" = java
      }

    }

    #remote {
     # log-remote-lifecycle-events = on
      #netty.tcp {
       # hostname = "127.0.0.1"
        #hostname = "10.0.0.39"
       # port = 2551
      #}
    #}

  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      #hostname = "10.0.0.52"
      #hostname = "10.0.0.34"
      port = 2551
    }
  }

  cluster {
    seed-nodes = [
    # "akka://drsDP@10.0.0.243:2551", "akka://drsDP@10.0.0.246:2551"]
     "akka://drsDP@127.0.0.1:2551"]
    #"akka.tcp://ClusterSystem@192.168.0.127:2551",
    #"akka.tcp://drsDP@127.0.0.1:5001"]
      #"akka://drsDP@127.0.0.1:2551"]

     # auto-down-unreachable-after = 10s
    }
}





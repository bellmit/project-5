//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.06.10 at 11:40:51 PM CST 
//


package com.kindminds.drs.mws.xml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for HardnessUnitOfMeasure.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="HardnessUnitOfMeasure"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="brinnell"/&gt;
 *     &lt;enumeration value="vickers"/&gt;
 *     &lt;enumeration value="rockwell_a"/&gt;
 *     &lt;enumeration value="rockwell_b"/&gt;
 *     &lt;enumeration value="rockwell_c"/&gt;
 *     &lt;enumeration value="rockwell_d"/&gt;
 *     &lt;enumeration value="shore_a"/&gt;
 *     &lt;enumeration value="shore_b"/&gt;
 *     &lt;enumeration value="shore_c"/&gt;
 *     &lt;enumeration value="shore_d"/&gt;
 *     &lt;enumeration value="shore_do"/&gt;
 *     &lt;enumeration value="shore_e"/&gt;
 *     &lt;enumeration value="shore_m"/&gt;
 *     &lt;enumeration value="shore_o"/&gt;
 *     &lt;enumeration value="shore_oo"/&gt;
 *     &lt;enumeration value="shore_ooo"/&gt;
 *     &lt;enumeration value="shore_ooo_s"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "HardnessUnitOfMeasure")
@XmlEnum
public enum HardnessUnitOfMeasure {

    @XmlEnumValue("brinnell")
    BRINNELL("brinnell"),
    @XmlEnumValue("vickers")
    VICKERS("vickers"),
    @XmlEnumValue("rockwell_a")
    ROCKWELL___A("rockwell_a"),
    @XmlEnumValue("rockwell_b")
    ROCKWELL___B("rockwell_b"),
    @XmlEnumValue("rockwell_c")
    ROCKWELL___C("rockwell_c"),
    @XmlEnumValue("rockwell_d")
    ROCKWELL___D("rockwell_d"),
    @XmlEnumValue("shore_a")
    SHORE___A("shore_a"),
    @XmlEnumValue("shore_b")
    SHORE___B("shore_b"),
    @XmlEnumValue("shore_c")
    SHORE___C("shore_c"),
    @XmlEnumValue("shore_d")
    SHORE___D("shore_d"),
    @XmlEnumValue("shore_do")
    SHORE___DO("shore_do"),
    @XmlEnumValue("shore_e")
    SHORE___E("shore_e"),
    @XmlEnumValue("shore_m")
    SHORE___M("shore_m"),
    @XmlEnumValue("shore_o")
    SHORE___O("shore_o"),
    @XmlEnumValue("shore_oo")
    SHORE___OO("shore_oo"),
    @XmlEnumValue("shore_ooo")
    SHORE___OOO("shore_ooo"),
    @XmlEnumValue("shore_ooo_s")
    SHORE___OOO___S("shore_ooo_s");
    private final String value;

    HardnessUnitOfMeasure(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static HardnessUnitOfMeasure fromValue(String v) {
        for (HardnessUnitOfMeasure c: HardnessUnitOfMeasure.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}

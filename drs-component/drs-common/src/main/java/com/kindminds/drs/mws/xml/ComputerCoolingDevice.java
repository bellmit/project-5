//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.06.10 at 11:40:51 PM CST 
//


package com.kindminds.drs.mws.xml;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{}VariationData" minOccurs="0"/&gt;
 *         &lt;element ref="{}AdditionalFeatures" minOccurs="0"/&gt;
 *         &lt;element ref="{}CoolingType" minOccurs="0"/&gt;
 *         &lt;element ref="{}CPUSocketCompatability" maxOccurs="20" minOccurs="0"/&gt;
 *         &lt;element ref="{}FanIncluded" minOccurs="0"/&gt;
 *         &lt;element ref="{}FanLED" minOccurs="0"/&gt;
 *         &lt;element ref="{}FanMaximumAirflow" minOccurs="0"/&gt;
 *         &lt;element ref="{}FanMaximumNoiseLevel" minOccurs="0"/&gt;
 *         &lt;element ref="{}FanMaximumSpeed" minOccurs="0"/&gt;
 *         &lt;element ref="{}FanPowerConnector" minOccurs="0"/&gt;
 *         &lt;element ref="{}HeatsinkMaterial" minOccurs="0"/&gt;
 *         &lt;element ref="{}LargestFanSize" minOccurs="0"/&gt;
 *         &lt;element ref="{}ModelNumber" minOccurs="0"/&gt;
 *         &lt;element name="PowerPlugType" type="{}PowerPlugType" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "variationData",
    "additionalFeatures",
    "coolingType",
    "cpuSocketCompatability",
    "fanIncluded",
    "fanLED",
    "fanMaximumAirflow",
    "fanMaximumNoiseLevel",
    "fanMaximumSpeed",
    "fanPowerConnector",
    "heatsinkMaterial",
    "largestFanSize",
    "modelNumber",
    "powerPlugType"
})
@XmlRootElement(name = "ComputerCoolingDevice")
public class ComputerCoolingDevice {

    @XmlElement(name = "VariationData")
    protected VariationData variationData;
    @XmlElement(name = "AdditionalFeatures")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    @XmlSchemaType(name = "normalizedString")
    protected String additionalFeatures;
    @XmlElement(name = "CoolingType")
    protected String coolingType;
    @XmlElement(name = "CPUSocketCompatability")
    protected List<String> cpuSocketCompatability;
    @XmlElement(name = "FanIncluded")
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger fanIncluded;
    @XmlElement(name = "FanLED")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    @XmlSchemaType(name = "normalizedString")
    protected String fanLED;
    @XmlElement(name = "FanMaximumAirflow")
    protected AirflowDimension fanMaximumAirflow;
    @XmlElement(name = "FanMaximumNoiseLevel")
    protected NoiseLevelSixDigitDimension fanMaximumNoiseLevel;
    @XmlElement(name = "FanMaximumSpeed")
    protected SpeedSixDigitDimension fanMaximumSpeed;
    @XmlElement(name = "FanPowerConnector")
    protected String fanPowerConnector;
    @XmlElement(name = "HeatsinkMaterial")
    protected String heatsinkMaterial;
    @XmlElement(name = "LargestFanSize")
    protected LengthFiveDigitDimension largestFanSize;
    @XmlElement(name = "ModelNumber")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    @XmlSchemaType(name = "normalizedString")
    protected String modelNumber;
    @XmlElement(name = "PowerPlugType")
    @XmlSchemaType(name = "normalizedString")
    protected PowerPlugType powerPlugType;

    /**
     * Gets the value of the variationData property.
     * 
     * @return
     *     possible object is
     *     {@link VariationData }
     *     
     */
    public VariationData getVariationData() {
        return variationData;
    }

    /**
     * Sets the value of the variationData property.
     * 
     * @param value
     *     allowed object is
     *     {@link VariationData }
     *     
     */
    public void setVariationData(VariationData value) {
        this.variationData = value;
    }

    /**
     * Gets the value of the additionalFeatures property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAdditionalFeatures() {
        return additionalFeatures;
    }

    /**
     * Sets the value of the additionalFeatures property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAdditionalFeatures(String value) {
        this.additionalFeatures = value;
    }

    /**
     * Gets the value of the coolingType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCoolingType() {
        return coolingType;
    }

    /**
     * Sets the value of the coolingType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCoolingType(String value) {
        this.coolingType = value;
    }

    /**
     * Gets the value of the cpuSocketCompatability property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the cpuSocketCompatability property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCPUSocketCompatability().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getCPUSocketCompatability() {
        if (cpuSocketCompatability == null) {
            cpuSocketCompatability = new ArrayList<String>();
        }
        return this.cpuSocketCompatability;
    }

    /**
     * Gets the value of the fanIncluded property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getFanIncluded() {
        return fanIncluded;
    }

    /**
     * Sets the value of the fanIncluded property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setFanIncluded(BigInteger value) {
        this.fanIncluded = value;
    }

    /**
     * Gets the value of the fanLED property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFanLED() {
        return fanLED;
    }

    /**
     * Sets the value of the fanLED property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFanLED(String value) {
        this.fanLED = value;
    }

    /**
     * Gets the value of the fanMaximumAirflow property.
     * 
     * @return
     *     possible object is
     *     {@link AirflowDimension }
     *     
     */
    public AirflowDimension getFanMaximumAirflow() {
        return fanMaximumAirflow;
    }

    /**
     * Sets the value of the fanMaximumAirflow property.
     * 
     * @param value
     *     allowed object is
     *     {@link AirflowDimension }
     *     
     */
    public void setFanMaximumAirflow(AirflowDimension value) {
        this.fanMaximumAirflow = value;
    }

    /**
     * Gets the value of the fanMaximumNoiseLevel property.
     * 
     * @return
     *     possible object is
     *     {@link NoiseLevelSixDigitDimension }
     *     
     */
    public NoiseLevelSixDigitDimension getFanMaximumNoiseLevel() {
        return fanMaximumNoiseLevel;
    }

    /**
     * Sets the value of the fanMaximumNoiseLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link NoiseLevelSixDigitDimension }
     *     
     */
    public void setFanMaximumNoiseLevel(NoiseLevelSixDigitDimension value) {
        this.fanMaximumNoiseLevel = value;
    }

    /**
     * Gets the value of the fanMaximumSpeed property.
     * 
     * @return
     *     possible object is
     *     {@link SpeedSixDigitDimension }
     *     
     */
    public SpeedSixDigitDimension getFanMaximumSpeed() {
        return fanMaximumSpeed;
    }

    /**
     * Sets the value of the fanMaximumSpeed property.
     * 
     * @param value
     *     allowed object is
     *     {@link SpeedSixDigitDimension }
     *     
     */
    public void setFanMaximumSpeed(SpeedSixDigitDimension value) {
        this.fanMaximumSpeed = value;
    }

    /**
     * Gets the value of the fanPowerConnector property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFanPowerConnector() {
        return fanPowerConnector;
    }

    /**
     * Sets the value of the fanPowerConnector property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFanPowerConnector(String value) {
        this.fanPowerConnector = value;
    }

    /**
     * Gets the value of the heatsinkMaterial property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHeatsinkMaterial() {
        return heatsinkMaterial;
    }

    /**
     * Sets the value of the heatsinkMaterial property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHeatsinkMaterial(String value) {
        this.heatsinkMaterial = value;
    }

    /**
     * Gets the value of the largestFanSize property.
     * 
     * @return
     *     possible object is
     *     {@link LengthFiveDigitDimension }
     *     
     */
    public LengthFiveDigitDimension getLargestFanSize() {
        return largestFanSize;
    }

    /**
     * Sets the value of the largestFanSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link LengthFiveDigitDimension }
     *     
     */
    public void setLargestFanSize(LengthFiveDigitDimension value) {
        this.largestFanSize = value;
    }

    /**
     * Gets the value of the modelNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getModelNumber() {
        return modelNumber;
    }

    /**
     * Sets the value of the modelNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setModelNumber(String value) {
        this.modelNumber = value;
    }

    /**
     * Gets the value of the powerPlugType property.
     * 
     * @return
     *     possible object is
     *     {@link PowerPlugType }
     *     
     */
    public PowerPlugType getPowerPlugType() {
        return powerPlugType;
    }

    /**
     * Sets the value of the powerPlugType property.
     * 
     * @param value
     *     allowed object is
     *     {@link PowerPlugType }
     *     
     */
    public void setPowerPlugType(PowerPlugType value) {
        this.powerPlugType = value;
    }

}
